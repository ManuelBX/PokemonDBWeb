@page
@model PokeDex.Pages.Search.BasicModel
@{
    ViewData["Title"] = "Basic Pokemon Search";
}

<div class="container">
    <h1>Basic Pokemon Search</h1>
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <form method="get">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="SearchTerm" class="form-label">Search by Name or Pokedex Number</label>
                                <input asp-for="SearchTerm" class="form-control" placeholder="Enter Pokemon name or number">
                            </div>
                            <div class="col-md-3 mb-3">
                                <label asp-for="SelectedType" class="form-label">Type</label>
                                <select asp-for="SelectedType" asp-items="Model.TypeOptions" class="form-select">
                                    <option value="">All Types</option>
                                </select>
                            </div>
                            <div class="col-md-3 mb-3">
                                <label asp-for="SelectedGeneration" class="form-label">Generation</label>
                                <select asp-for="SelectedGeneration" asp-items="Model.GenerationOptions" class="form-select">
                                    <option value="">All Generations</option>
                                </select>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3 mb-3">
                                <label asp-for="SortBy" class="form-label">Sort By</label>
                                <select asp-for="SortBy" class="form-select">
                                    <option value="pokedex">Pokedex Number</option>
                                    <option value="name">Name</option>
                                    <option value="type">Type</option>
                                    <option value="total">Total Stats</option>
                                </select>
                            </div>
                            <div class="col-md-3 mb-3">
                                <label asp-for="SortDirection" class="form-label">Sort Direction</label>
                                <select asp-for="SortDirection" class="form-select">
                                    <option value="asc">Ascending</option>
                                    <option value="desc">Descending</option>
                                </select>
                            </div>
                            <div class="col-md-2 mb-3 d-flex align-items-end">
                                <button type="submit" class="btn btn-primary w-100">Search</button>
                            </div>
                            <div class="col-md-2 mb-3 d-flex align-items-end">
                                <a asp-page="/Search/Advanced" class="btn btn-outline-secondary w-100">Advanced Search</a>
                            </div>
                            <div class="col-md-2 mb-3 d-flex align-items-end">
                                <button type="reset" class="btn btn-outline-danger w-100">Reset</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @if (Model.Results != null && Model.Results.Any())
    {
        <div class="row mb-3">
            <div class="col">
                <div class="d-flex justify-content-between align-items-center">
                    <p class="mb-0">Found @Model.TotalResults results. Showing @(((Model.CurrentPage - 1) * Model.PageSize) + 1) to @(Math.Min(Model.TotalResults, Model.CurrentPage * Model.PageSize)).</p>
                </div>
            </div>
        </div>

        <div class="row row-cols-1 row-cols-md-3 row-cols-lg-4 g-4">
            @foreach (var pokemon in Model.Results)
            {
                <div class="col">
                    <div class="card h-100">
                        <div class="card-header d-flex justify-content-between">
                            <span class="fw-bold">#@pokemon.PokedexNumber</span>
                            <span>Gen @pokemon.Generation</span>
                        </div>
                        <img src="@pokemon.ImageUrl" class="card-img-top p-3" alt="@pokemon.Name" style="height: 200px; object-fit: contain;">
                        <div class="card-body">
                            <h5 class="card-title text-center">@pokemon.Name</h5>
                            <div class="d-flex justify-content-center mb-2">
                                <span class="badge bg-primary me-1">@pokemon.PrimaryType</span>
                                @if (!string.IsNullOrEmpty(pokemon.SecondaryType))
                                {
                                    <span class="badge bg-secondary">@pokemon.SecondaryType</span>
                                }
                            </div>
                            <div class="text-center">
                                <a asp-page="/Pokemon/Detail" asp-route-id="@pokemon.Id" class="btn btn-outline-primary">View Details</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="row mt-4">
            <div class="col">
                <nav>
                    <ul class="pagination justify-content-center">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-page="/Search/Basic"
                                   asp-route-searchTerm="@Model.SearchTerm"
                                   asp-route-selectedType="@Model.SelectedType"
                                   asp-route-selectedGeneration="@Model.SelectedGeneration"
                                   asp-route-sortBy="@Model.SortBy"
                                   asp-route-sortDirection="@Model.SortDirection"
                                   asp-route-page="@(Model.CurrentPage - 1)">Previous</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">Previous</span>
                            </li>
                        }

                        @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" asp-page="/Search/Basic"
                                   asp-route-searchTerm="@Model.SearchTerm"
                                   asp-route-selectedType="@Model.SelectedType"
                                   asp-route-selectedGeneration="@Model.SelectedGeneration"
                                   asp-route-sortBy="@Model.SortBy"
                                   asp-route-sortDirection="@Model.SortDirection"
                                   asp-route-page="@i">@i</a>
                            </li>
                        }

                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-page="/Search/Basic"
                                   asp-route-searchTerm="@Model.SearchTerm"
                                   asp-route-selectedType="@Model.SelectedType"
                                   asp-route-selectedGeneration="@Model.SelectedGeneration"
                                   asp-route-sortBy="@Model.SortBy"
                                   asp-route-sortDirection="@Model.SortDirection"
                                   asp-route-page="@(Model.CurrentPage + 1)">Next</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">Next</span>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    }
    else if (Model.IsSearchPerformed)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-info">
                    No Pokemon found matching your search criteria. Try adjusting your search.
                </div>
            </div>
        </div>
    }
</div>